box: wercker/python
build:
    steps:
        - virtualenv:
            name: setup virtual environment
            install_wheel: true
        - pip-install
        - script:
            name: echo python information
            code: |
                echo "python version $(python --version) running"
                echo "pip version $(pip --version) running"
                pip freeze
        - script:
            name: running tests
            code: |
                echo "test script goes here"

deploy:
    steps:
        - add-to-known_hosts:
            hostname: imods.wunderkind.us
            fingerprint: 8c:2d:c2:d3:13:10:79:47:45:c3:da:60:5e:12:b1:14

        - mktemp:
            name: creating temporary private key
            envvar: PRIVATEKEY_PATH

        - mktemp:
            name: creating temporary ssh config
            envvar: SSH_CONFIG_PATH

        - mktemp:
            name: creating package file
            envvar: PACKAGE_PATH

        - create-file:
            name: write private key
            filename: $PRIVATEKEY_PATH
            content: $DEPLOY_SSH_PRIVATE
            overwrite: true
            hide-from-log: true

        - create-file:
            name: create temporary ssh config
            filename: $SSH_CONFIG_PATH
            content: $SSH_CONFIG_CONTENT
            overwrite: true
            hide-from-log: true

        - script:
            name: packaging application
            code: |
                ./deploy.sh package $PACKAGE_PATH

        - script:
            name: transfer application
            code: |
                echo PWD=$PWD
                ############################################
                ls -al
                ############################################
                chmod 600 $PRIVATEKEY_PATH
                scp -vvv -i $PRIVATEKEY_PATH -F $SSH_CONFIG_PATH -o UserKnownHostsFile=no $PACKAGE_PATH $SSH_HOSTNAME:~/

        - script:
            name: stopping application
            code: ssh -vvv -i $PRIVATEKEY_PATH -F $SSH_CONFIG_PATH $SSH_HOSTNAME 'pgrep uwsgi && pkill -INT uwsgi || echo'

        - script:
            name: cleanning remote environment
            code: ssh -vvv -i $PRIVATEKEY_PATH -F $SSH_CONFIG_PATH 'rm -rf ~/app/*'

        - script:
            name: unpacking application
            code: |
                ssh -vvv -i $PRIVATEKEY_PATH -F $SSH_CONFIG_PATH $SSH_HOSTNAME "mkdir ~/app; tar zxv -C ~/app -f ~/`basename $PACKAGE_PATH`"

        - script:
            name: starting application
            code: ssh -vvv -i $PRIVATEKEY_PATH -F $SSH_CONFIG_PATH $SSH_HOSTNAME '~/app/deploy.sh deploy start deploy'
